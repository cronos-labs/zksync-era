name: Docker Build and Push

on:
  push:
    branches:
      - docker
  workflow_dispatch:

env:
  REGISTRY: ghcr.io/cronos-labs
  IMAGE_NAME: external-node
  IMAGE_TAG: mainnet-v25.0.0-20250123
  BRANCH_NAME: cronos_core-v25.0.0

jobs:
  build-and-push:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
            suffix: ""
          - arch: arm64
            runner: ubuntu-24.04-arm
            platform: linux/arm64
            suffix: "-arm64"
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Initial checkout for Dockerfile and scripts
        uses: actions/checkout@v4

      - name: Save build files
        run: |
          mkdir -p /tmp/build-files
          cp Dockerfile /tmp/build-files/
          cp generate_secrets.sh /tmp/build-files/

      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Restore build files
        run: |
          cp /tmp/build-files/Dockerfile ./
          cp /tmp/build-files/generate_secrets.sh ./

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}${{ matrix.suffix }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max